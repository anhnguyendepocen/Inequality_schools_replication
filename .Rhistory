})
}) %>%
setNames(country_names)
reduce_df <-
all_indicators %>%
map(~ reduce(.x, function(x, y) as.data.frame(cbind(x, y)))) %>%
reduce(rbind)
colnames(reduce_df) <- inequality_indicator
pisa_to_nest_2 <-
reduce_df %>%
as_tibble() %>%
mutate(year = as.character(rep(vector_to_fill, length(country_names))),
country = rep(country_names, each = length(vector_to_fill))) %>%
gather(indicators, value, GINI:S90S10) %>%
right_join(pisa_to_nest, by = c("country", "year")) %>%
filter(country != "Russia")
pisa_to_nest2
pisa_to_nest_2
my_plots <-
map(na.omit(unique(pisa_to_nest_2$indicators)), function(inequality_measure) {
pisa_to_nest_2 %>%
filter(continent == "Europe" & indicators == inequality_measure) %>%
ggplot(aes(value, estimate_read)) +
geom_point(alpha = 0.7) +
# geom_text_repel(aes(Value, estimate_math, label = country)) + # In case want to see country names
geom_smooth(method = "lm") +
xlab(inequality_measure) +
ylab("") +
facet_grid(~ year) +
theme_minimal()
})
multiplot(my_plots[[1]], my_plots[[2]],
my_plots[[3]], my_plots[[4]], cols = 1)
setNames(unique(all_indicators$Measure), unique(all_indicators$MEASURE))
all_indicators <-
read_csv("./IDD_10042017150802214.csv")
setNames(unique(all_indicators$Measure), unique(all_indicators$MEASURE))
enframe(setNames(unique(all_indicators$Measure), unique(all_indicators$MEASURE)))
indicators <- c("GINI", "GINIB", "GINIG", "PALMA", paste0("P90P", c("10", "50")),
"P50P10", "S80S20", "S90S10")
income_inequality <-
all_indicators %>%
select(Country, Year, AGE, Value, MEASURE, Measure, Unit, METHODO) %>%
mutate_if(is_integer, as.character) %>%
filter(MEASURE %in% indicators)
enframe(setNames(unique(all_indicators$Measure), unique(all_indicators$MEASURE))) %>%
filter(name %in% indicators)
multiplot(my_plots[[5]], my_plots[[6]],
my_plots[[7]], my_plots[[8]], cols = 1)
multiplot(my_plots[[1]], my_plots[[2]],
my_plots[[3]], my_plots[[4]], cols = 1)
cor.extract <- function(cor_object) {
data.frame(cor = unname(cor_object$estimate), p_val = cor_object$p.value)
}
cor.extract <- function(cor_object) {
data.frame(cor = unname(cor_object$estimate), p_val = cor_object$p.value)
}
correlation_tests_second <-
pisa_to_nest_2 %>%
filter(continent %in% c("Europe") & country != "Russia") %>%
split(interaction(.$year, .$continent, .$indicators)) %>%
na.omit() %>%
map(~ cor.test(.x$estimate_math, .x$value))
correlation_tests_second
my_corrs <-
map(inequality_indicator, function(ineq_indi) {
map(correlation_tests_second, cor.extract) %>%
enframe() %>%
unnest(value) %>%
separate(name, c("year", "country", "indicators")) %>%
filter(indicators == ineq_indi)  %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators)) +
geom_smooth(aes(group = indicators), method = "lm", se = F) +
geom_point(aes(colour = p_val <= 0.1), size = 2) +
scale_colour_discrete(guide = F) +
xlab("") + ylab(ineq_indi) +
theme_minimal()
})
multiplot(my_corrs[[1]], my_corrs[[2]],
my_corrs[[3]], my_corrs[[4]], cols = 1)
my_corrs <-
map(inequality_indicator, function(ineq_indi) {
map(correlation_tests_second, cor.extract) %>%
enframe() %>%
unnest(value) %>%
separate(name, c("year", "country", "indicators")) %>%
filter(indicators == ineq_indi)
})
my_corrs
my_corrs %>%
reduce(rbind)
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators)) +
geom_point(aes(colour = p_val <= 0.1), size = 2) +
scale_colour_discrete(guide = F) +
xlab("") + ylab(ineq_indi) +
theme_minimal()
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators)) +
geom_point(aes(colour = p_val <= 0.1), size = 2) +
scale_colour_discrete(guide = F) +
xlab("") + ylab("Correlation") +
theme_minimal()
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(size = 2) +
scale_colour_discrete(guide = F) +
xlab("") + ylab("Correlation") +
theme_minimal()
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(guide = F) +
xlab("") + ylab("Correlation") +
theme_minimal()
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
xlab("") + ylab("Correlation") +
theme_minimal()
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL)
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
geom_hline(yintercept = 0) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
multiplot(my_plots[[5]], my_plots[[6]],
my_plots[[7]], my_plots[[8]], cols = 1)
my_corrs
my_corrs %>%
reduce(rbind) %>%
filter(p)
my_corrs %>%
reduce(rbind) %>%
filter(p_val < 0.1)
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
geom_smooth(method = "lm") +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2)
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
geom_smooth(method = "lm") +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
geom_smooth(method = "lm") +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_smooth(method = "lm") +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_smooth() +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.line = element_line(colour = "grey"))
tracking <-
read_csv("./tracking.csv") %>%
select(-bwid, -cntry)
?tempfile()
temp_dir <- base::tempdir()
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip", temp_dir)
temp_dir
list.files(temp_dir)
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip", exdir = temp_dir)
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = temp_dir)
?download.file
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = temp_dir, method = "curl")
list.files(temp_dir)
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = temp_dir, method = "auto")
file_name <- file.path(temp_dir, "tracking.zip")
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name))
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
unzip(file_name, exdir = temp_dir)
list.files(file_name)
list.files(temp_dir)
unlink(temp_dir, recursive = T)
temp_dir
list.files(temp_dir)
?unlink
temp_dir <- tempdir()
file_name <- file.path(temp_dir, "tracking.zip")
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
temp_dir <- tempdir()
file_name <- file.path(temp_dir, "tracking.zip")
file_name
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
library("PISA2000lite")
library("PISA2003lite")
library("PISA2006lite")
library("PISA2009lite")
library("PISA2012lite")
library(tidyverse)
library(cimentadaj)
library(haven)
library(intsvy)
library(ggrepel)
library(SAScii)
source("http://peterhaschke.com/Code/multiplot.R")
pisa <- read_rds("./pisa")
colnames(pisa)[4] <- "reg_models_math"
pisa$r_sq_math <-
map(pisa$reg_models_math, ~ map(.x, ~ .x$reg[grep("squared", row.names(.x$reg)), 1:2])) %>%
map(~ enframe(.x) %>% unnest(value))
pisa$r_sq_read <-
map(pisa$reg_models_read, ~ map(.x, ~ .x$reg[grep("squared", row.names(.x$reg)), 1:2])) %>%
map(~ enframe(.x) %>% unnest(value))
pisa_unnested <-
pisa %>%
unnest(r_sq_math, r_sq_read)
vars <- c("estimate", "std.error")
colnames(pisa_unnested) <-
c("type", "country",paste0(vars, "_math"), paste0(c("country", vars), "_read"))
pisa_to_nest <-
pisa_unnested %>%
mutate(type = ifelse(type == "math2000", "student2000", type),
region = countrycode::countrycode(country, "country.name", "region"),
continent = countrycode::countrycode(country, "country.name", "continent")) %>%
separate(type, c("resp", "year"), sep = 7)
gini <-
read_csv("./tabula-hdr.csv", skip = 5) %>%
rename(countries = `High human development`,
mix_vars = X6) %>%
select(countries, mix_vars) %>%
separate(mix_vars, c("random", "avg_gini"), sep = " ") %>%
separate(countries, c("ID", "Country")) %>%
select(-random, - ID) %>%
mutate(avg_gini = as.numeric(car::recode(avg_gini, '".." = NA')),
Year = "2000") %>%
filter(complete.cases(.))
pisa_to_nest_2 <-
gini %>%
right_join(pisa_to_nest, by = c("Country" = "country", "Year" = "year"))
p1 <-
pisa_to_nest_2 %>%
filter(continent == "Europe" & Year == "2000") %>%
ggplot(aes(avg_gini, estimate_math)) +
geom_smooth(method = "lm", se  = F) +
geom_point(aes(colour = region), alpha = 0.7) +
geom_text_repel(aes(avg_gini, estimate_math, label = Country)) + # In case want to see which country is which
ylim(0, 0.30) +
scale_colour_discrete(guide = F) +
scale_x_continuous(labels = seq(24, 40, 2),
breaks = seq(24, 40, 2)) +
ggtitle("Mathematics") +
xlab("Gini Index") +
ylab("Inequality of opportunities") +
theme_minimal() +
theme(axis.line = element_line(colour = "grey"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
p2 <-
pisa_to_nest_2 %>%
filter(continent == "Europe" & Year == "2000") %>%
ggplot(aes(avg_gini, estimate_read)) +
geom_smooth(method = "lm", se  = F) +
geom_point(aes(colour = region), alpha = 0.7) +
geom_text_repel(aes(avg_gini, estimate_read, label = Country)) + # In case want to see which country is which
scale_y_continuous(name = NULL, limits = c(0, 0.30)) +
scale_colour_discrete(name = "") +
scale_x_continuous(labels = seq(24, 40, 2),
breaks = seq(24, 40, 2)) +
ggtitle("Literacy") +
xlab("Gini Index") +
ylab("Inequality of opportunities") +
theme_minimal() +
theme(axis.line = element_line(colour = "grey"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
multiplot(p1, p2, cols = 2)
temp_dir <- tempdir()
list.files(temp_dir)
file_unzip <- file.path(temp_dir, "stata.zip")
download.file("https://www.wider.unu.edu/sites/default/files/WIID3.4_New.zip", file_unzip)
unzip(file_unzip, exdir = temp_dir)
list.files(temp_dir)
file_name <- list.files(temp_dir, pattern = "WII*.dta")
gini_various <-
read_dta(file.path(temp_dir, file_name)) %>%
select(Country, Year, Gini, P5, P95) %>%
mutate(Year = as.character(Year))
file.path(temp_dir, file_name)
file_name <- list.files(temp_dir, pattern = "WII*.dta")
file_name
file_name <- list.files(temp_dir, pattern = "WII*?.dta")
file_name
file_name <- list.files(temp_dir, pattern = "WII.*\\.dta")
file_name
gini_various <-
read_dta(file.path(temp_dir, file_name)) %>%
select(Country, Year, Gini, P5, P95) %>%
mutate(Year = as.character(Year))
unlink(tempdir, recursive = T)
unlink(temp_dir, recursive = T)
temp_dir <- tempdir()
list.files(temp_dir)
file_name <- file.path(temp_dir, "tracking.zip")
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
file_name
tempdir()
?file.path
?base::file.path
temp_dir <- tempdir()
file_name <- file.path(temp_dir, "tracking.zip")
list.files(temp_dir)
dir.exists(temp_dir)
temp_dir <- tempdir()
file_name <- file.path(temp_dir, "tracking.zip")
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
