#     rename_(mom_imm = immigrant_var)
# })
#
# # create variables and select the variables to use.
# pisa$selected_vars <-
#   pisa$selected_vars %>%
#   map(function(data) {
#     data %>%
#       mutate(country = pisa_countrynames[as.character(CNT)],
#              MISCED = car::recode(MISCED, "1:5 = 0; 6:7 = '1'")) %>%
#       select(country, MISCED, mom_imm, HISEI, ends_with("READ"), ends_with("MATH"))
# })
# pisa$reg_models_math <- map(seq_along(pisa$selected_vars), function(index) {
#   print(pisa$name[index])
#
#   if (pisa$name[index] == "student2015") {
#   pisa2015.reg.pv(x = c("MISCED", "mom_imm", "HISEI"),
#                   pvlabel = "MATH", by = "country", data = pisa$selected_vars[[index]])
#   } else {
#   pisa.reg.pv(x = c("MISCED", "mom_imm", "HISEI"),
#               pvlabel = "MATH", by = "country", data = pisa$selected_vars[[index]])
#   }
# })
# pisa$reg_models_read <- map(seq_along(pisa$selected_vars), function(index) {
#   print(pisa$name[index])
#   if (pisa$name[index] == "student2015") {
#   pisa2015.reg.pv(x = c("MISCED", "mom_imm", "HISEI"),
#                   pvlabel = "READ", by = "country", data = pisa$selected_vars[[index]])
#   } else {
#   pisa.reg.pv(x = c("MISCED", "mom_imm", "HISEI"),
#               pvlabel = "READ", by = "country", data = pisa$selected_vars[[index]])
#   }
# })
# The previous data frame is HUGE. In case you want to save it for
# opening it in the future, use:
# write_rds(pisa, path = "./pisa")
pisa <- read_rds("./pisa")
colnames(pisa)[4] <- "reg_models_math"
r_square_extractor <- function(model) {
map(model, ~ map(.x, ~ .x$reg[grep("squared", row.names(.x$reg)), 1:2])) %>%
map(~ enframe(.x) %>% unnest(value))
}
pisa$r_sq_math <- r_square_extractor(pisa$reg_models_math)
pisa$r_sq_read <- r_square_extractor(pisa$reg_models_read)
pisa_unnested <-
pisa %>%
unnest(r_sq_math, r_sq_read)
vars <- c("estimate", "std.error")
colnames(pisa_unnested) <-
c("type", "country",paste0(vars, "_math"), paste0(c("country", vars), "_read"))
pisa_to_nest <-
pisa_unnested %>%
mutate(type = ifelse(type == "math2000", "student2000", type),
region = countrycode::countrycode(country, "country.name", "region"),
continent = countrycode::countrycode(country, "country.name", "continent")) %>%
separate(type, c("resp", "year"), sep = 7)
# Data set is ready!
gini <-
read_csv("./tabula-hdr.csv", skip = 5) %>%
rename(countries = `High human development`,
mix_vars = X6) %>%
select(countries, mix_vars) %>%
separate(mix_vars, c("random", "avg_gini"), sep = " ") %>%
separate(countries, c("ID", "Country")) %>%
select(-random, - ID) %>%
mutate(avg_gini = as.numeric(car::recode(avg_gini, '".." = NA')),
Year = "2000") %>%
filter(complete.cases(.))
pisa_to_nest_2 <-
gini %>%
right_join(pisa_to_nest, by = c("Country" = "country", "Year" = "year"))
rounder <- function(number) round(number, digits = 2)
theme_jorge <- function() {
theme_minimal() +
theme(axis.line = element_line(colour = "grey"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
}
p1 <-
pisa_to_nest_2 %>%
filter(continent == "Europe" & Year == "2000") %>%
ggplot(aes(avg_gini, estimate_math)) +
geom_smooth(method = "lm", se  = F) +
geom_point(alpha = 0.7) +
geom_text_repel(aes(avg_gini, estimate_math, label = Country)) + # In case want to see which country is which
ylim(0, 0.30) +
scale_colour_discrete(guide = F) +
scale_x_continuous(labels = seq(24, 40, 2),
breaks = seq(24, 40, 2)) +
ggtitle("Mathematics") +
xlab("Gini Index") +
ylab("Inequality of opportunities") +
theme_jorge()
p2 <-
pisa_to_nest_2 %>%
filter(continent == "Europe" & Year == "2000") %>%
ggplot(aes(avg_gini, estimate_read)) +
geom_smooth(method = "lm", se  = F) +
geom_point(alpha = 0.7) +
geom_text_repel(aes(avg_gini, estimate_read, label = Country)) + # In case want to see which country is which
scale_y_continuous(name = NULL, limits = c(0, 0.30)) +
scale_colour_discrete(name = "") +
scale_x_continuous(labels = seq(24, 40, 2),
breaks = seq(24, 40, 2)) +
ggtitle("Literacy") +
xlab("Gini Index") +
ylab("Inequality of opportunities") +
theme_jorge()
multiplot(p1, p2, cols = 2)
## Download the data from https://stats.oecd.org/Index.aspx?DataSetCode=IDD.
## click on Export -> Text File (CSV) - > Download
##### All income inequality indicators
all_ineq_indicators <-
read_csv("./IDD_10042017150802214.csv")
# setNames(unique(all_ineq_indicators$Measure), unique(all_ineq_indicators$MEASURE))
# The above code gives you all the measured available with its code.
indicators <- c("GINI", "GINIB", "GINIG", "PALMA", paste0("P90P", c("10", "50")),
"P50P10", "S80S20", "S90S10")
income_inequality <-
all_ineq_indicators %>%
select(Country, Year, AGE, Value, MEASURE, Measure, Unit, METHODO) %>%
mutate_if(is_integer, as.character) %>%
filter(MEASURE %in% indicators)
vector_to_fill <- seq(2000, 2015, 3)
vector_filler <- function(vector_to_fill, vector_to_fill_from) {
# If the vector to search for is empty, return NA repeated n times.
if (is_empty(vector_to_fill_from)) {
empty_years <- rep(NA, length(vector_to_fill)) %>%
setNames(vector_to_fill)
return(empty_years)
}
# Function returns a list with information on which years to use to fill from
which_inside_which <- function(vector_to_fill, vector_to_fill_from) {
names_to_fill_from <- names(vector_to_fill_from)
# Years which are present in both vectors (those we will keep as is)
already_filled <- vector_to_fill %in% names_to_fill_from
already_filled_from <- names_to_fill_from %in% vector_to_fill
# Values we need to actually fill
yrs_to_subtract <- vector_to_fill[!already_filled]
# Values available to fill the yrs_to_subtract vector
yrs_to_loop <- as.numeric(names(vector_to_fill_from))
list(years_filled = already_filled,
years_filled_from = already_filled_from,
years_to_subtract = yrs_to_subtract,
years_to_loop = yrs_to_loop)
}
indexes <- which_inside_which(vector_to_fill, vector_to_fill_from)
indices_to_match <-
map(indexes$years_to_subtract, function(.x) {
subtraction <- .x - indexes$years_to_loop # subtract each year to be filled from all available years
abs_subtr <- abs(subtraction)
abs_subtr == min(abs_subtr) # Check which year is the closest to the year to be filled in
})
# Subset the closest year and calculate the mean in case there is more than one value
new_values <-
map_dbl(indices_to_match, ~ mean(vector_to_fill_from[.x])) %>%
setNames(indexes$years_to_subtract) %>%
`c`(vector_to_fill_from[indexes$years_filled_from])
correct_order <-
names(new_values) %>%
as.numeric() %>%
order()
new_values[correct_order]
}
country_names <- unique(income_inequality$Country)
inequality_indicator <- unique(income_inequality$MEASURE)[-3]
# Excluding GINIG which is not found in the data
# Loop through each country, and then through each inequality indicator and apply the function from above.
# This will return a list for each country containing all inequality indicators.
all_indicators <-
map(country_names, function(country_name) {
map(inequality_indicator, function(inequality_indicator) {
specific_country <- with(income_inequality,
income_inequality[MEASURE == inequality_indicator &
Country == country_name &
METHODO == "METH2011" &
AGE == "TOT", c("Country", "Year", "Value")])
vector_to_fill_from <- with(specific_country, setNames(Value, Year))
vector_filler(vector_to_fill, vector_to_fill_from)
})
}) %>%
setNames(country_names)
# Take that list, for each country, cbind it and the data frame it.
# Finally, row bind all of those data frames.
reduce_df <-
all_indicators %>%
map(~ reduce(.x, function(x, y) as.data.frame(cbind(x, y)))) %>%
reduce(rbind)
colnames(reduce_df) <- inequality_indicator
# Create the year and country variables plus make the data long rather than wide
# Join that data frame with the Rsquare data from before, by country and year
pisa_to_nest_2 <-
reduce_df %>%
as_tibble() %>%
mutate(year = as.character(rep(vector_to_fill, length(country_names))),
country = rep(country_names, each = length(vector_to_fill))) %>%
gather(indicators, value, GINI:S90S10) %>%
right_join(pisa_to_nest, by = c("country", "year")) %>%
filter(country != "Russia")
my_plots <-
map(na.omit(unique(pisa_to_nest_2$indicators)), function(inequality_measure) {
pisa_to_nest_2 %>%
filter(continent == "Europe" & indicators == inequality_measure) %>%
ggplot(aes(value, estimate_read)) +
geom_point(alpha = 0.7) +
# geom_text_repel(aes(Value, estimate_math, label = country)) + # In case want to see country names
geom_smooth(method = "lm") +
xlab(inequality_measure) +
ylab("") +
facet_grid(~ year) +
theme_jorge()
})
multiplot(my_plots[[1]], my_plots[[2]],
my_plots[[3]], my_plots[[4]], cols = 1)
table <-
enframe(setNames(unique(all_ineq_indicators$Measure), unique(all_ineq_indicators$MEASURE))) %>%
filter(name %in% indicators)
knitr::kable(table)
multiplot(my_plots[[5]], my_plots[[6]],
my_plots[[7]], my_plots[[8]], cols = 1)
cor.extract <- function(cor_object) {
data.frame(cor = unname(cor_object$estimate), p_val = cor_object$p.value)
}
correlation_tests_second <-
pisa_to_nest_2 %>%
filter(continent %in% c("Europe") & country != "Russia") %>%
split(interaction(.$year, .$continent, .$indicators)) %>%
na.omit() %>%
map(~ cor.test(.x$estimate_math, .x$value))
my_corrs <-
map(inequality_indicator, function(ineq_indi) {
map(correlation_tests_second, cor.extract) %>%
enframe() %>%
unnest(value) %>%
separate(name, c("year", "country", "indicators")) %>%
filter(indicators == ineq_indi)
})
my_corrs %>%
reduce(rbind) %>%
ggplot(aes(year, cor)) +
geom_hline(yintercept = 0) +
geom_line(aes(group = indicators, colour = indicators)) +
geom_point(aes(colour = indicators), size = 2) +
scale_colour_discrete(name = NULL) +
xlab("") + ylab("Correlation") +
theme_jorge()
##### Tracking indicator
temp_dir <- tempdir()
file.remove(file.path(temp_dir, list.files(temp_dir))) %>%
invisible()
file_name <- file.path(temp_dir, "tracking.zip")
download.file("http://thijsbol.com/wp-content/uploads/2015/09/educsysdata-v4.zip",
destfile = file_name)
unzip(file_name, exdir = temp_dir)
tracking_name <- list.files(temp_dir, pattern = "bw-.*\\-full-.*\\.dta")
tracking <-
read_dta(file.path(temp_dir, tracking_name)) %>%
select(-bwid, -cntry)
pisa_to_nest_3 <-
pisa_to_nest %>%
left_join(tracking, c("country" = "cntry_name"))
p3 <-
pisa_to_nest_3 %>%
filter(continent == "Europe") %>%
ggplot(aes(ztrack, estimate_math, alpha = std.error_math)) +
geom_point() +
geom_smooth(method = "lm") +
scale_x_continuous(name = NULL) +
scale_y_continuous("Inequality of opportunity") +
ggtitle("Mathematics") +
facet_wrap(~ year, ncol = 6) +
scale_alpha_continuous(guide = F) +
theme_jorge()
p4 <-
pisa_to_nest_3 %>%
filter(continent == "Europe") %>%
ggplot(aes(ztrack, estimate_read, alpha = std.error_math)) +
geom_point() +
geom_smooth(method = "lm") +
ggtitle("Reading") +
scale_x_continuous(name = "Tracking Index") +
scale_y_continuous("Inequality of opportunity") +
facet_wrap(~ year, ncol = 6) +
scale_alpha_continuous(guide = F) +
theme_jorge()
multiplot(p3, p4, cols = 1)
correlation_tests_third <-
pisa_to_nest_3 %>%
filter(continent %in% c("Europe")) %>%
split(interaction(.$year, .$continent)) %>%
na.omit() %>%
map(~ cor.test(.x$estimate_math, .x$ztrack))
corr_df <-
map(correlation_tests_third, cor.extract) %>%
enframe() %>%
unnest(value) %>%
separate(name, c("year", "country"))
corr_df %>%
ggplot(aes(year, cor)) +
geom_line(aes(group = country)) +
geom_smooth(aes(group = country), method = "lm") +
geom_point() +
ggtitle("Mathematics") +
ylab("Tracking * Inequality of opportunity correlation") +
xlab("") +
theme_minimal() +
coord_fixed(3)
pirls_dir <- "/Users/cimentadaj/Downloads/PIRLS/"
years <- c("2001", "2006", "2011")
pirls_dir2 <- paste0(pirls_dir, years, "/PIRLS/Grade 04/", "Y", years, "/Data/SPSS/")
try <- map(file.path("/Users/cimentadaj/Downloads/pirls_2001_codebooks_upd", list.files("/Users/cimentadaj/Downloads/pirls_2001_codebooks_upd", pattern = ".dbf")), read.dbf)
library(foreign)
pirls_dir <- "/Users/cimentadaj/Downloads/PIRLS/"
years <- c("2001", "2006", "2011")
pirls_dir2 <- paste0(pirls_dir, years, "/PIRLS/Grade 04/", "Y", years, "/Data/SPSS/")
try <- map(file.path("/Users/cimentadaj/Downloads/pirls_2001_codebooks_upd", list.files("/Users/cimentadaj/Downloads/pirls_2001_codebooks_upd", pattern = ".dbf")), read.dbf)
# map(try, ~ .x[grep("MOTHER", .x$FIELD_LABL), c("FIELD_NAME", "FIELD_LABL")])
eduparent <- c("2001" = c("ASBHEDUM"),
"2006" = c("ASBHLEDM"),
"2011" = c("ASBH17B"))
mothers_immigrant <- c("2001" = "ASBGBRNM",
"2006" = "ASBGBRNM",
"2011"= "ASBH16B") # language spoken by mother
socio_economic_index <- c("2001" = "ASDGPS", # INDEX OF HOME POSESS
"2006" = "ASDHHER", # INDEX of HOME-Educational resources
"2011" = "ASDHOCCP") # Parent's highest occupational status
pirls <- map2(pirls_dir2, eduparent, ~ pirls.select.merge(folder = .x, home = .y))
pirls_list <- list(pirls_dir2, eduparent, mothers_immigrant, socio_economic_index)
pirls <-
pmap(pirls_list, function(one, two, three, four) {
if (one == pirls_dir2[3]) {
pirls.select.merge(one, home = c(two, three, four))
} else {
pirls.select.merge(one, home = two, student = c(three, four))
}
})
parent_coding <- c("1:6 = 0; 7:8 = 1; else = NA",
"1:4 = 0; 5:7 = 1; else = NA",
"1:5 = 0; 6:8 = 1; else = NA")
rename_list <- list(pirls, eduparent, mothers_immigrant, socio_economic_index, parent_coding)
pirls_two <- pmap(rename_list, function(data, education, mom_imm, socio, parent_coding) {
data %>%
rename_(mother_edu = education,
mothers_imm = mom_imm,
socio_econ_ind = socio) %>%
mutate(mother_edu = car::recode(as.numeric(mother_edu), parent_coding),
mothers_imm = as.numeric(mothers_imm))
})
pirls_read <- map(pirls_two, ~
pirls.reg.pv(x = c("mother_edu", "mothers_imm", "socio_econ_ind"),
by = "IDCNTRYL",
data = .x))
pirls_sq_read <-
r_square_extractor(pirls_read) %>%
map2(c("2001", "2006", "2011"), function(data, year) data %>% mutate(year = year)) %>%
reduce(rbind) %>%
rename(pirls_read_estimate = Estimate,
std.error_pirls_read = `Std. Error`,
country_pirls = name)
pisa_to_pirls <-
pisa_to_nest %>%
filter(year %in% c("2000", "2006", "2012")) %>%
mutate(year_pirls = as.character(car::recode(year, "2000 = 2001; 2012 = 2011")))
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
ggplot(aes(country, year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
scale_fill_manual(guide = F, values = c("skyblue2", "lightcoral")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
pisa_to_nest
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
ggplot(aes(country, year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
scale_fill_manual(guide = F, values = c("skyblue2", "lightcoral")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
tracking
View(tracking)
m <- pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate)
m
table(m$country)
?left_join
tracking
tracking %>%
select(cntry_name, selage)
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name"))
age_tracking <-
tracking %>%
select(cntry_name, selage)
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name"))
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, "(", selage, ")"))
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, " (", selage, ")"))
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, " (", selage, ")")) %>%
ggplot(aes(reorder(label, selage), year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
scale_fill_manual(guide = F, values = c("skyblue2", "lightcoral")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
?reorder()
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, " (", selage, ")")) %>%
ggplot(aes(reorder(label, -selage), year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
scale_fill_manual(guide = F, values = c("skyblue2", "lightcoral")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, " (", selage, ")")) %>%
ggplot(aes(reorder(label, -selage), year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
#  scale_fill_manual(guide = F, values = c("skyblue2", "lightcoral")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
pisa_to_pirls %>%
left_join(pirls_sq_read, by = c("country" = "country_pirls", "year_pirls" = "year")) %>%
mutate(continent = countrycode(country, "country.name", "continent")) %>%
filter(!is.na(pirls_read_estimate) & continent == "Europe") %>%
select(continent, country, year_pirls, contains("estimate"), contains("pirls")) %>%
mutate(diff_read = estimate_read - pirls_read_estimate) %>%
left_join(age_tracking, by = c("country" = "cntry_name")) %>%
mutate(label = paste0(country, " (", selage, ")")) %>%
ggplot(aes(reorder(label, -selage), year_pirls, fill = diff_read < 0)) +
geom_tile() +
coord_flip() +
scale_fill_manual(guide = F, values = c("lightcoral", "skyblue2")) +
scale_y_discrete(name = NULL) +
scale_x_discrete(name = NULL) +
ggtitle("Which countries had a reduction of inequality of opportunity over time?") +
theme_jorge() +
theme(axis.line = element_blank())
