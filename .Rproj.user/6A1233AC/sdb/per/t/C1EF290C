{
    "collab_server" : "",
    "contents" : "library(\"PISA2000lite\")\nlibrary(\"PISA2003lite\")\nlibrary(\"PISA2006lite\")\nlibrary(\"PISA2009lite\")\nlibrary(\"PISA2012lite\")\nlibrary(tidyverse)\nlibrary(cimentadaj)\nlibrary(haven)\nlibrary(intsvy)\nlibrary(ggrepel)\n\nstudent2015 <- read_sav(\"/Users/cimentadaj/Downloads/PISA/PISA2015/CY6_MS_CMB_STU_QQQ.sav\")\n\npisa_data_names <- c(\"math2000\", paste0(\"student\", seq(2003, 2015, 3)))\n\npisa <-\n  map(pisa_data_names, get) %>%\n  setNames(pisa_data_names) %>%\n  enframe()\n\npisa$selected_vars <-\n  map(seq_along(pisa$value), function(row) {\n  immigrant_var <-\n    switch(pisa$name[row],\n         \"math2000\" = \"ST16Q01\",\n         \"student2003\" = \"ST15Q02\",\n         \"student2006\" = \"ST11Q02\",\n         \"student2009\" = \"ST17Q02\",\n         \"student2012\" = \"ST20Q02\",\n         \"student2015\" = \"ST019BQ01T\")\n  \n  if (\"hisei\" %in% names(pisa$value[[row]])) pisa$value[[row]]$HISEI <- pisa$value[[row]]$hisei\n  \n  pisa$value[[row]] %>%\n    rename_(mom_imm = immigrant_var)\n})\n\npisa$selected_vars <-\n  pisa$selected_vars %>%\n  map(function(data) {\n    data %>%\n      mutate(country = pisa_countrynames[as.character(CNT)],\n             MISCED = car::recode(MISCED, \"1:5 = 0; 6:7 = '1'\")) %>%\n      select(country, MISCED, mom_imm, HISEI, ends_with(\"READ\"), ends_with(\"MATH\")) %>%\n      as_tibble()\n})\n\npisa$reg_models <- map(seq_along(pisa$selected_vars), function(index) {\n  print(pisa$name[index])\n  \n  if (pisa$name[index] == \"student2015\") {\n  pisa2015.reg.pv(x = c(\"MISCED\", \"mom_imm\", \"HISEI\"),\n                  pvlabel = \"MATH\", by = \"country\", data = pisa$selected_vars[[index]])\n  } else {\n  pisa.reg.pv(x = c(\"MISCED\", \"mom_imm\", \"HISEI\"),\n              pvlabel = \"MATH\", by = \"country\", data = pisa$selected_vars[[index]])\n  }\n})\n\npisa$reg_models_read <- map(seq_along(pisa$selected_vars), function(index) {\n  print(pisa$name[index])\n  pisa.reg.pv(x = c(\"MISCED\", \"mom_imm\", \"HISEI\"),\n              pvlabel = \"READ\", by = \"country\", data = pisa$selected_vars[[index]])\n})\nbeepr::beep()\n\nwrite_rds(pisa, path = \"./pisa\")\n\npisa$r_sq <-\n  map(pisa$reg_models, ~ map(.x, ~ .x$reg[grep(\"squared\", row.names(.x$reg)), 1:2]))\n\npisa$r_sq_read <-\n  map(pisa$reg_models_read, ~ map(.x, ~ .x$reg[grep(\"squared\", row.names(.x$reg)), 1:2]))\n\n\npisa$r_sq_df <- map(pisa$r_sq, ~ enframe(.x) %>% unnest(value))\npisa$r_sq_df_read <- map(pisa$r_sq_read, ~ enframe(.x) %>% unnest(value))\n\ngini <-\n  read_csv(\"./Downloads/gini.csv\") %>%\n  select(Country, Year, Gini) %>%\n  mutate_if(is_integer, as.character) %>%\n  group_by(Country, Year) %>%\n  summarise(avg_gini = mean(Gini, na.rm = T),\n            median_gini = median(Gini, na.rm = T))\n\n# You left of here, choosing which indicators you will use:\nsetNames(unique(income_inequality$Measure), unique(income_inequality$MEASURE))\n#The above code gives you all the measured available with its code.\n\nincome_inequality <-\n  read_csv(\"./Downloads/income_inequality.csv\") %>%\n  select(Country, Year, Value, MEASURE, Measure, Unit, METHODO) %>%\n  mutate_if(is_integer, as.character) %>%\n  filter(MEASURE %in% c(\"GINI\", \"GINIB\", \"GINIG\", \"PALMA\", paste0(\"P90P\", c(\"10\", \"50\")),\n                        \"P50P10\", \"S80S20\", \"S90S10\"))\npisa_unnested <-\n  pisa %>%\n  unnest(r_sq_df, r_sq_df_read)\n\nvars <- c(\"estimate\", \"std.error\")\ncolnames(pisa_unnested) <-\n  c(\"type\", \"country\",paste0(vars, \"_math\"), paste0(c(\"country\", vars), \"_read\"))\n\npisa_to_nest <-\n  pisa_unnested %>%\n  mutate(type = ifelse(type == \"math2000\", \"student2000\", type),\n         region = countrycode::countrycode(country, \"country.name\", \"region\"),\n         continent = countrycode::countrycode(country, \"country.name\", \"continent\")) %>%\n  separate(type, c(\"resp\", \"year\"), sep = 7)\n\npisa_to_nest_2 <-\n  income_inequality %>%\n  group_by(Country, Year, MEASURE, METHODO) %>%\n  summarize(avg_value = mean(Value, na.rm = T)) %>%\n  right_join(pisa_to_nest, by = c(\"Country\" = \"country\", \"Year\" = \"year\"))\n\n\npisa_to_nest_2 %>%\n  filter(MEASURE == \"GINI\" & METHODO == \"METH2011\" & Year == \"2015\") %>%\n  ggplot(aes(avg_value, estimate_math)) +\n  geom_point(alpha = 0.5) +\n# geom_text_repel(aes(Value, estimate_math, label = country)) +\n  geom_smooth(method = \"lm\", se = F) +\n  facet_wrap(~ year) +\n  scale_alpha_continuous(guide = F) +\n  ylim(c(0, 0.4)) +\n  xlim(c(20, 50))\n\ncorrelation_tests <-\n  pisa_to_nest %>%\n  filter(continent %in% c(\"Europe\")) %>%\n  split(interaction(.$year, .$continent)) %>%\n  na.omit() %>%\n  map(~ cor.test(.x$estimate_math, .x$avg_gini))\n\ncor.extract <- function(cor_object) {\n  data.frame(cor = unname(cor_object$estimate), p_val = cor_object$p.value)\n}\n\nmap(correlation_tests, cor.extract) %>%\n  enframe() %>%\n  unnest(value) %>%\n  separate(name, c(\"year\", \"country\")) %>%\n  ggplot(aes(year, cor, fill = country)) +\n  geom_col() +\n  coord_flip()\n\ntracking <-\n  read_csv(\"./Downloads/tracking.csv\") %>%\n  select(-bwid, -cntry)\n\npisa_to_nest <-\n  pisa_to_nest %>%\n  left_join(tracking, c(\"country\" = \"cntry_name\"))\n\npisa_to_nest %>%\n  ggplot(aes(zstand_timss, estimate_read, alpha = std.error_read)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~ year) +\n  scale_alpha_continuous(guide = F)\n\n\n# Create variable with language spoken at home the same at school or not\n# MISCED variable\n# HISEI and ESCS models separate\n# Extract R2 and use GINI index scatterplot.\n\n# Try 2015 PISA\n# Try other GINI-type coefficients\n# Try their tracking index, as well as wefhorst's.\n# Repeat on TIMSS and PIRLS.\n\n\"MISED\"\n\"ESCS\" # SES index\n\"HISEI\" # SES index not in 2015\n",
    "created" : 1491321664352.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1210809110",
    "id" : "C1EF290C",
    "lastKnownWriteTime" : 1491377071,
    "last_content_update" : 1491377072265,
    "path" : "~/Downloads/gitrepo/Inequality_schools_replication/replication_tracking_pisa.R",
    "project_path" : "replication_tracking_pisa.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}